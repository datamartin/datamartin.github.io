library(ggplot2)
kysimustik <- read.csv2("Kysimustik.csv", header=TRUE) #andmevälju eraldab semikoolon
library(foreign)
pisa <- read.spss("PISA2009.sav", to.data.frame=TRUE, use.value.labels=FALSE)
mean(pisa$AGE)# keskmise arvutamiseks sai kasutada funktsiooni mean()
table(pisa$Gender)
table(pisa$GR)
cor.test(pisa$PV1MATH, pisa$PV1READ)
cor(pisa[,c("PV1MATH", "PV1READ", "PV1SCIE")])
library(psych)
corr.test(pisa[,c("PV1MATH", "PV1READ", "PV1SCIE")])
tapply(pisa$PV1MATH, pisa$Gender, mean, na.rm = TRUE)
tapply(pisa$PV1READ, pisa$GR, mean, na.rm=TRUE)
ggplot(pisa, aes(y=PV1READ, x = GR))+
geom_bar(aes(group = GR), position = "dodge", stat="identity")+
labs(x ="klass" , y = "matemaatika alatesti keskmine skoor")
ggplot(pisa, aes(y=PV1READ, x = GR))+
geom_bar(aes(group = GR), position = "dodge", stat="identity", fun.y = "mean")+
labs(x ="klass" , y = "matemaatika alatesti keskmine skoor")
ggplot(pisa, aes(y=PV1READ, x = GR))+
geom_bar(aes(group = GR), position = "dodge", stat="identity", stat = "summary")+
labs(x ="klass" , y = "matemaatika alatesti keskmine skoor")
ggplot(pisa, aes(y=PV1READ, x = GR))+
geom_bar(aes(group = GR), position = "dodge", stat = "summary")+
labs(x ="klass" , y = "matemaatika alatesti keskmine skoor")
tapply(pisa$PV1MATH, pisa$GR, mean, na.rm=TRUE)
ggplot(pisa, aes(y=PV1MATH, x = GR))+
geom_bar(aes(group = GR), position = "dodge", stat = "summary")+
labs(x ="klass" , y = "matemaatika alatesti keskmine skoor")
ggplot(pisa, aes(y=PV1MATH, x = GR))+
geom_bar(aes(group = GR), stat = "summary")+
labs(x ="klass" , y = "matemaatika alatesti keskmine skoor")
ggplot(pisa, aes(y=PV1MATH, x = GR))+
geom_bar(aes(group = GR), stat = "summary",fun.y = "mean")+ #
labs(x ="klass" , y = "matemaatika alatesti keskmine skoor")
ggplot(pisa, aes(PV1MATH))+
geom_histogram()
ggplot(pisa, aes(PV1MATH))+
geom_histogram()+
labs(title = "Mamtemaatika tulemused")
ggplot(pisa, aes(x = Gender, y = PV1MATH))+
geom_boxplot()
ggplot(pisa, aes(x = as.factor(Gender), y = PV1MATH))+
geom_boxplot()
ggplot(pisa, aes(x = as.factor(Gender), y = PV1MATH))+ #kui joonis ei tee eraldi tulpasi, siis tuleb lisada kategoriseerivale tunnusele funtksioon as.factor()
geom_boxplot()+
scale_x_discrete(labels = C("tüdrukud", "poisid"))
ggplot(pisa, aes(x = as.factor(Gender), y = PV1MATH))+ #kui joonis ei tee eraldi tulpasi, siis tuleb lisada kategoriseerivale tunnusele funtksioon as.factor()
geom_boxplot()+
scale_x_discrete(labels = c("tüdrukud", "poisid"))
ggplot(pisa, aes(x = as.factor(Gender), y = PV1MATH))+ #kui joonis ei tee eraldi tulpasi, siis tuleb lisada kategoriseerivale tunnusele funtksioon as.factor()
geom_boxplot()+
scale_x_discrete(labels = c("tüdrukud", "poisid"))+
labs(x = "matemaatika tulemused", y = "sugu")
ggplot(pisa, aes(x = as.factor(Gender), y = PV1MATH))+ #kui joonis ei tee eraldi tulpasi, siis tuleb lisada kategoriseerivale tunnusele funtksioon as.factor()
geom_boxplot()+
scale_x_discrete(labels = c("tüdrukud", "poisid"))+
labs(x = "sugu", y = "matemaatika tulemused")
ggplot(pisa, aes(x = as.factor(Gender), y = PV1MATH))+ #kui joonis ei tee eraldi tulpasi, siis tuleb lisada kategoriseerivale tunnusele funtksioon as.factor()
geom_boxplot(aes(fill = "blue"))+
scale_x_discrete(labels = c("tüdrukud", "poisid"))+
labs(x = "sugu", y = "matemaatika tulemused")
ggplot(pisa, aes(x = as.factor(Gender), y = PV1MATH))+ #kui joonis ei tee eraldi tulpasi, siis tuleb lisada kategoriseerivale tunnusele funtksioon as.factor()
geom_boxplot(aes(col = "blue"))+
scale_x_discrete(labels = c("tüdrukud", "poisid"))+
labs(x = "sugu", y = "matemaatika tulemused")
ggplot(pisa, aes(x = as.factor(Gender), y = PV1MATH))+ #kui joonis ei tee eraldi tulpasi, siis tuleb lisada kategoriseerivale tunnusele funtksioon as.factor()
geom_boxplot(fill = "grey80", colour = "#3366FF")+
scale_x_discrete(labels = c("tüdrukud", "poisid"))+
labs(x = "sugu", y = "matemaatika tulemused")
ggplot(pisa, aes(x = as.factor(Gender), y = PV1MATH))+ #kui joonis ei tee eraldi tulpasi, siis tuleb lisada kategoriseerivale tunnusele funtksioon as.factor()
geom_boxplot(fill = "grey80", colour = "#3366FF")+
scale_x_discrete(labels = c("tüdrukud", "poisid"))+
labs(x = "sugu", y = "matemaatika tulemused")+
theme_bw()
s
ggplot(pisa, aes(x = as.factor(Gender), y = PV1MATH))+ #kui joonis ei tee eraldi tulpasi, siis tuleb lisada kategoriseerivale tunnusele funtksioon as.factor()
geom_boxplot(fill = "grey80", colour = "#3366FF")+
scale_x_discrete(labels = c("tüdrukud", "poisid"))+
labs(x = "sugu", y = "matemaatika tulemused")+
theme_classic()
ggplot(pisa, aes(x= PV1MATH, y = PV1READ))+
geom_point(shape=1) +    # shape = 1 - tühjad ringid
geom_smooth(method=lm,   # lisab regressioonisirge
se=FALSE)    # SE = FALSE - ei lisa usalduspiire
ggplot(pisa, aes(x= PV1MATH, y = PV1READ))+
geom_point(shape=1) +    # shape = 1 - tühjad ringid
geom_smooth(method=lm,   # lisab regressioonisirge
se=TRUE)    # SE = FALSE - ei lisa usalduspiire
ggplot(pisa, aes(x= PV1READ, y = PV1SCIE))+
geom_point(shape=1) +    # shape = 1 - tühjad ringid
geom_smooth(method=lm, se=TRUE) +   # lisab regressioonisirge, se = TRUE - lisab usalduspiire
theme_classic()
ggplot(pisa, aes(y=PV1READ, x = GR))+
geom_bar(aes(group = GR), stat = "summary", fun.y = "mean") +
labs(x ="klass" , y = "lugemise alatesti keskmine skoor")
tapply(pisa$PV1READ, pisa$GR, mean, na.rm =TRUE)
ggplot(subset(pisa, Gender == 1), aes(x=PV1MATH))+
geom_histogram()
ggplot(subset(pisa, Gender == 1), aes(x=PV1MATH))+
geom_histogram()+
labs(tilte ="Tüdrukute tulemused")
ggplot(subset(pisa, Gender == 2), aes(x=PV1MATH))+
geom_histogram()+
labs(tilte ="Poiste tulemused")
ggplot(pisa, aes(x=PV1MATH))+
geom_histogram()+
facet_wrap(~Gender)
pisa_tydrukud <- subset(pisa, Gender == 1)
